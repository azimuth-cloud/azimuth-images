---
# ACL Required for become to an unprivileged user to work
# Ensure up-to-date CA certificates
# Use linux-generic to track linux-modules-extra (IB)
- name: Install common packages  # noqa package-latest
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - acl
      - ca-certificates
      - linux-generic
    state: latest

# Enables the ansible-init system, but does not install any default playbooks
- name: Ensure ansible-init is configured
  ansible.builtin.include_role:
    name: azimuth_cloud.image_utils.linux_ansible_init

# Enables volumes to be referred to by tag for setting up mounts in cloud-config
- name: Ensure volumes can be mounted by tag
  ansible.builtin.include_role:
    name: linux-volumes-by-tag

- name: Load relevant kernel modules
  ansible.builtin.template:
    src: modules.conf.j2
    dest: /etc/modules-load.d/modules.conf
    mode: "0644"
    owner: root
    group: root

# The cloud-init netplan renderer is default for ubuntu
# but does not support InfiniBand devices
- name: Switch cloud-init to alternative network renderer
  ansible.builtin.lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: "^    renderers:.*"
    line: "    renderers: ['networkd', 'network-manager']"
    state: present

- name: Switch cloud-init to alternative network activator
  ansible.builtin.lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: "^    activators:.*"
    line: "    activators: ['networkd', 'eni', 'network-manager']"
    state: present

- name: Blacklist specified kernel modules
  community.general.kernel_blacklist:
    name: "{{ item }}"
    state: present
  loop: "{{ blacklisted_kernel_modules }}"
  when: blacklisted_kernel_modules | length > 0
  notify: Regenerate initramfs

- name: Clean up after ourselves
  ansible.builtin.apt:
    clean: true
