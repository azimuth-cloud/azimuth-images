---

- hosts: localhost
  gather_facts: true
  become: true
  vars_files:
    - /etc/ansible-init/vars/guacamole.yml
  vars:
    os_metadata: "{{ lookup('url', 'http://169.254.169.254/openstack/latest/meta_data.json') | from_json }}"
    os_user_metadata: "{{ os_metadata.get('meta', {}) }}"
  tasks:
    # Allow the guacamole user to be overridden using metadata
    - name: Set Guacamole user fact
      set_fact:
        guacamole_user: "{{ os_user_metadata.get('guacamole_user', default_guacamole_user) }}"

    - name: Generate SSH keypair for Guacamole
      # Guacamole requires that the key is PEM-formatted
      #Â See https://issues.apache.org/jira/browse/GUACAMOLE-745
      # This means that we cannot use community.crypto.openssh_keypair :-(
      command: >-
        ssh-keygen
          -m PEM
          -t rsa
          -b 3072
          -q
          -N ""
          -f /etc/guacamole/id_rsa
          -C "Generated-for-Guacamole"

    - name: Set SSH keypair facts
      set_fact:
        guacamole_ssh_public_key: "{{ lookup('file', '/etc/guacamole/id_rsa.pub') }}"
        guacamole_ssh_private_key: "{{ lookup('file', '/etc/guacamole/id_rsa') }}"
    
    - name: Remove SSH keypair files
      file:
        path: "/etc/guacamole/{{ item }}"
        state: absent
      loop:
        - id_rsa
        - id_rsa.pub

    - name: Add public key to Guacamole user
      ansible.posix.authorized_key:
        user: "{{ guacamole_user }}"
        state: present
        key: "{{ guacamole_ssh_public_key }}"

    - block:
        - name: Generate VNC password for Guacamole
          set_fact:
            guacamole_vnc_password: "{{ lookup('community.general.random_string', length = 16, override_special = special_chars) }}"
          vars:
            # Even though this string is within a CDATA tag, there's very small chance of
            # generating ]]>, which will still break XML. Therefore remove ">" from special
            # characters.
            special_chars: '!"#$%&()*+,-./:;<=?@[\]^_`{|}~'

        - name: Get guacamole user info
          user:
            name: "{{ guacamole_user }}"
            state: present
          register: guacamole_user_info

        - name: Set VNC server user facts for guacamole user
          set_fact:
            guacamole_user_vnc_config_dir: "{{ guacamole_user_info.home }}/.vnc"
        
        - block:
          - name: Encode VNC password
            command: vncpasswd -f
            args:
              stdin: "{{ guacamole_vnc_password }}"
            register: vncpassword

          - name: Create VNC directory
            file:
              state: directory
              path: "{{ guacamole_user_vnc_config_dir }}"
              owner: "{{ guacamole_user }}"
              group: "{{ guacamole_user }}"
              mode: "0775"

          - name: Create VNC password file
            copy:
              content: "{{ vncpassword.stdout }}"
              dest: "{{ guacamole_user_vnc_config_dir }}/passwd"
              owner: "{{ guacamole_user }}"
              group: "{{ guacamole_user }}"
              mode: "0600"
          become: yes
          become_user: "{{ guacamole_user }}"

        - name: Ensure systemd overrides directory exists
          file:
            path: /etc/systemd/system/vncserver@:1.service.d
            state: directory

        - name: Configure user for systemd unit
          copy:
            dest: /etc/systemd/system/vncserver@:1.service.d/user.conf
            content: |
              [Service]
              Environment=VNCSERVER_PASSWD_FILE={{ guacamole_user_vnc_config_dir }}/passwd
              User={{ guacamole_user }}

        - name: Start and enable VNC server
          service:
            name: vncserver@:1.service
            state: started
            enabled: yes
      when: desktop_enabled

    - name: Write Guacamole user mapping file
      copy:
        content: |
          <user-mapping>
              <authorize username="portal" password="portal">
                  <connection name="shell">
                      <protocol>ssh</protocol>
                      <param name="hostname">{{ ansible_default_ipv4.address }}</param>
                      <param name="port">22</param>
                      <param name="username">{{ guacamole_user }}</param>
                      <param name="private-key">{{ guacamole_ssh_private_key }}</param>
                      <param name="enable-sftp">true</param>
                  </connection>
          {% if desktop_enabled %}
                  <connection name="desktop">
                      <protocol>vnc</protocol>
                      <param name="hostname">{{ ansible_default_ipv4.address }}</param>
                      <param name="port">5901</param>
                      <param name="autoretry">3</param>
                      <param name="username">{{ guacamole_user }}</param>
                      <param name="password"><![CDATA[{{ guacamole_vnc_password }}]]></param>
                  </connection>
          {% endif %}
              </authorize>
          </user-mapping>
        dest: /etc/guacamole/user-mapping.xml

    - name: Start and enable Guacamole services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - guacamole
        - guacamole-server
        - guacamole-client
        - guacamole-mitm
