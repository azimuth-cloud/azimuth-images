name: Build images for PR
on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    branches:
      - main

jobs:
  # This job exists so that PRs from outside the main repo are rejected
  fail_on_remote:
    runs-on: ubuntu-latest
    steps:
      - name: PR must be from a branch in the azimuth-images repo
        run: exit ${{ github.repository == 'stackhpc/azimuth-images' && '0' || '1' }}

  # This job exists so that draft PRs see the check as failed
  fail_on_draft:
    runs-on: ubuntu-latest
    steps:
      - name: PR must be marked as ready for review before tests will run
        run: exit ${{ github.event.pull_request.draft && '1' || '0' }}

  build_images:
    needs: [fail_on_remote, fail_on_draft]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # We only build images whose dependencies have changed
      matrix:
        include:
          - name: ubuntu-desktop
            template: linux-desktop
            var-files: common,kvm,linux,ubuntu-focal
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - packer/linux-desktop.pkr.hcl
                - ansible/linux-webconsole.yml
                - ansible/roles/linux-webconsole/**
                - ansible/roles/linux-ansible-init/**
                - ansible/roles/linux-podman/**
                - ansible/roles/linux-data-volumes/**
                - ansible/roles/linux-guacamole/**
                - ansible/roles/linux-monitoring/**
                - ansible/roles/linux-zenith-client/**
          - name: ubuntu-rdp-gateway
            template: linux-rdp-gateway
            var-files: common,kvm,linux,ubuntu-focal
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - packer/linux-rdp-gateway.pkr.hcl
                - ansible/linux-rdp-gateway.yml
                - ansible/roles/linux-rdp-gateway/**
                - ansible/roles/linux-ansible-init/**
                - ansible/roles/linux-podman/**
                - ansible/roles/linux-data-volumes/**
                - ansible/roles/linux-guacamole/**
                - ansible/roles/linux-zenith-client/**
          - name: jupyter-repo2docker
            template: jupyter-repo2docker
            var-files: common,kvm,linux,ubuntu-focal
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - packer/jupyter-repo2docker.pkr.hcl
                - ansible/jupyter-repo2docker.yml
                - ansible/roles/jupyter-repo2docker/**
                - ansible/roles/linux-ansible-init/**
                - ansible/roles/linux-podman/**
                - ansible/roles/linux-data-volumes/**
                - ansible/roles/linux-monitoring/**
                - ansible/roles/linux-zenith-client/**
          # For now, we build Kubernetes images for focal _and_ jammy
          - name: kubernetes-1-25-focal
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-focal,kubernetes,kubernetes_1_25
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_25.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_25.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
          - name: kubernetes-1-25-jammy
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-jammy,kubernetes,kubernetes_1_25
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-jammy.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_25.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-jammy.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_25.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
          - name: kubernetes-1-26-focal
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-focal,kubernetes,kubernetes_1_26
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_26.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_26.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
          - name: kubernetes-1-26-jammy
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-jammy,kubernetes,kubernetes_1_26
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-jammy.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_26.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-jammy.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_26.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
          - name: kubernetes-1-27-focal
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-focal,kubernetes,kubernetes_1_27
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-focal.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_27.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-focal.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_27.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
          - name: kubernetes-1-27-jammy
            template: kubernetes
            var-files: common,kvm,linux,ubuntu-jammy,kubernetes,kubernetes_1_27
            path-filters: |
              paths:
                - .github/workflows/pr.yml
                - bin/*
                - config.pkr.hcl
                - requirements.yml
                - env/*/common.env
                - env/*/kvm.env
                - env/*/linux.env
                - env/*/ubuntu-jammy.env
                - env/*/kubernetes.env
                - env/*/kubernetes_1_27.env
                - vars/*/common.json
                - vars/*/kvm.json
                - vars/*/linux.json
                - vars/*/ubuntu-jammy.json
                - vars/*/kubernetes.json
                - vars/*/kubernetes_1_27.json
                - packer/kubernetes.pkr.hcl
                - vendor/image-builder/**
    name: ${{ matrix.name }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Check if image should be built
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: ${{ matrix.path-filters }}

      - name: Write OpenStack credentials
        run: echo "$CLOUDS_YAML_B64" | base64 -d > ./clouds.yaml
        env:
          CLOUDS_YAML_B64: ${{ secrets.CLOUDS_YAML_B64 }}
        if: ${{ steps.changes.outputs.paths == 'true' }}

      - name: Set up Packer environment
        run: ./bin/setup
        if: ${{ steps.changes.outputs.paths == 'true' }}

      - name: Build image
        run: ./bin/build-image
        env:
          OS_CLOUD: openstack
          PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: arcus
          PACKER_TEMPLATE: ${{ matrix.template }}
          ENV_VAR_FILES: ${{ matrix.var-files }}
          # For PRs, we don't need to save images
          PKR_VAR_skip_create_image: "true"
        if: ${{ steps.changes.outputs.paths == 'true' }}
